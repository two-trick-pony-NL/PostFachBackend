"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import dj_database_url
import os
from supabase import create_client
import certifi
import ssl

load_dotenv()



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
APPEND_SLASH = True

ALLOWED_HOSTS = []

ENCRYPTED_MODEL_FIELDS_KEY = os.environ["ENCRYPTED_MODEL_FIELDS_KEY"]
FIELD_ENCRYPTION_KEY = os.environ["ENCRYPTED_MODEL_FIELDS_KEY"]
SUPABASE_URL = os.getenv("SUPABASE_API_URL")
SUPABASE_SERVICE_ROLE_KEY = os.getenv("SUPABASE_JWT_KEY_SERVICE_ROLE") 
SUPABASE_JWKS_URL = os.getenv("SUPABASE_JWKS_URL")


supabase = create_client(SUPABASE_URL, SUPABASE_SERVICE_ROLE_KEY)

# Sign in user (email + password)
response = supabase.auth.sign_in_with_password({
    "email": "peter@petervandoorn.com",
    "password": os.environ["TEST_USER_PASSWORD"]
})

if response.user:
    jwt_token = response.session.access_token
    print("Authenticated successfully!\n\n")
    print("Bearer", jwt_token)
    print("\n\n")    
else:
    print("Failed to authenticate:", response)


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_cryptography',
    #'django_elasticsearch_dsl',
    #'django_elasticsearch_dsl_drf',
    'rest_framework',
    'drf_spectacular',
    "django_rq",
    'users',
    'emails',
    'email_integrations',
    'search',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'

 # Debugging line to check if the environment variable is loaded correctly
# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.parse(os.getenv('SUPABASE_DB_URL'))
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "core.authentication.SupabaseJWTAuthentication",
    ],
}

RQ_QUEUES = {
    'default': { # Default queue for generic tasks
        'HOST': '192.168.1.86',
        'PORT': 6379,
        'DB': 0,
        'DEFAULT_TIMEOUT': 360,
    },
    'outbound': { # Handles Outbound emails
        'HOST': '192.168.1.86',
        'PORT': 6379,
        'DB': 0,
        'DEFAULT_TIMEOUT': 180,
    },
    'sync': { # Mailbox Sync for generic tasks
        'HOST': '192.168.1.86',
        'PORT': 6379,
        'DB': 0,
        'DEFAULT_TIMEOUT': 600,
    },
    'notifications': { # Handles notifications both push notifications, emails or internal slack notifications
        'HOST': '192.168.1.86',
        'PORT': 6379,
        'DB': 0,
        'DEFAULT_TIMEOUT': 120,
    },
    'analytics': { # Handles analytics tasks 
        'HOST': '192.168.1.86',
        'PORT': 6379,
        'DB': 0,
        'DEFAULT_TIMEOUT': 900,
    },
}



SPECTACULAR_SETTINGS = {
    "TITLE": "PostFach API",
    "DESCRIPTION": "API docs",
    "VERSION": "1.0.0",
    "SERVE_INCLUDE_SCHEMA": False,
    "SECURITY": [{"BearerAuth": []}],  # applies globally
    "COMPONENTS": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
            }
        }
    },
}

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
